"""
Create a program that uses comparison operators (< > <= >=).
You must use the class' datafile, 'responses.csv' and analyze it
    to make at least 2 interesting observations.
You may use user input to add interactivity to the program.
You must design your algorithm in English first, then translate it to Python code.
Test as you go! Describe in your comments what steps you took to test your code.
"""
""" My assignment
-I plan to make a program that take the user input in a 
suvery format. It will than compare the results with the list of users in the
database, find the top 3 people with the most matching results with the user


1.) I ask for the users name and I will omit the user if he/she is in the database
2.) I than ask the user a survey and put their results on a list
3.) I than get a for loop of the line and file so the program can sift through all lines in the file
4.) I than use a for loop for x in range(len(urlist)): so the program can sift through all options of 
the user input and see which line has a match
5.) If a match is found between the two lists, 1 is added to the tally
6.) Than if the tally is greater than the bestmatch or 0 bestmatch will be set to equal tally to continue a " best of the best" system
7.) It will then set a variable equal to the list of the best similar list
8.)The tally variable will be set 0 at the start of the for line in file loop to reset the tally each time an option comes out better
9.) in the end The program will print out the name of your best match and the ammount of similarities you two have

testcase:
What is your full name? jeremy wong
what is your favourite number?8
what is your favourite pet?cat
what is your favourite subject?math
what is your favourite sport to play?football
what is your favourite sport to watch?football
what is your favourite movie genre? Adventure
What is your favourite place to eat?Bubble waffle 
Your best match is serene lee
Your second best match is 
Your third best match is
You have a 4/8 similarity.
"""
file = open("2.4/responses.csv")
#Opens the database file once
survey = ['What is your favourite number?', 'What is your favourite pet?', 'What is your favourite subject?', 'What is your favourite sport to play?', 'What is your favourite sport to watch?', 'What is your favourite genre of music?', 'What is your favourite movie genre?', 'What is your favourite place to eat?']
#This list will store the survey questions that are asked to the user
urlist = []
#This empty list will contain the user's response
first = ''
#this variable will contain the person with the highest similarity to the user
rank = []
#this empty list will contain the list of scores 
#generated by the first for loop nested section
listofnames = []
#This empty list contains all the names in the database
best = []
#list to contain the top 3 names with most similarity to the user
placementofnum = 0
#Variable to store the current placement number of the best winner 
rankscore = []
#empty list to store the score of the top 3 most similar names
name = input('what is your full name? ').lower().strip() 
#gets the name of the user and stores it in a variable
for quesion in survey:
    #This for loop will repeatedly ask the questions in the survey 
    # variable one at a time
    #Then will use append to put each response from the user into 
    #urlist variable
    question = input(quesion).lower().strip()
    urlist.append(question)
#>>>>>>>>>>>>>>>>>>>>>>>>>>>
junk = file.readline()
#Reads and discards the first line of the database which is 
#useless and may cause future errors
for line in file: 
    #This for loop will iterate another for loop
    #for as many lines there are in the file of 
    #the database
    tally = 0
    #resets the tally to 0 after the score of the person is 
    #recorded in rank list
    for x in range(len(urlist)):
        #This for loop will run for how many qualities
        #in urlist
        personlist = line.lower().split(',')
        #turns each line into a list and stores it in a variable
        if name in personlist:
            continue
        #checks if the line contains the users name and skips over it
        if urlist[x] in personlist:
        #checks each individual quality in personlist 
        #and adds one to the tally for each quality
            tally += 1
    rank.append(tally)
    #at the end of the for loop it adds the value of the tally to a list
    #before it is reset to 0
    listofnames.append(personlist[1])
    #at the end of the for loop adds the name of the person
    #to the listofnames before personlist is reset to the next person
#print(str(rank))
#>>>>>>>>>>>>>>>>>>>>>>>>>>>

for a in range(3):
    #this for loop will run 3 times
    score = -1
    bestmatchscore = 0
    #reseting the score and bestmatchscore variables 3 times
    if first in listofnames:
    #checks if that value of first is in the list
    #if so, it will remove the value and the score 
    # then allowing the for loop to continue
    #finding the most similar person without the value of first
            listofnames.remove(first)#new code usage(ask mrchin to explain)
            rank.pop(placementofnum)#new code usage(ask mrchin to explain)
            #print('removed first person')
    for i in rank:
        #iterates for the ammount of values in rank list
        score += 1
        #records the current placement of the value eg.
        # (5, 6, 7)
        #if the for loop is checking 7
        #score would equal 3 
        if i > bestmatchscore:
        #checks if i is greater than the bestmatchscore
            bestmatchscore = i
        #if so, sets the bestmatch score = 1 & 
        #stores the name of the person in the first variable
        #stores the placement of the score in placementofnum
            first = listofnames[score]
            #print('variable first has changed')
            placementofnum = score
    rankscore.append(bestmatchscore)
    best.append(first)
    #at the end of the for loop adds the values and scores of the best
    #person to two different lists (this goes on 3 times)
    #eg ['serene lee', 'jayden wong', 'gabe armour']
#print(str(best))
#print(str(rankscore))
print('Your first best match is ' + str(best[0]))
print('Their score is ' + str(rankscore[0]) + '/8')
print('Your first best match is ' + str(best[1]))
print('Their score is ' + str(rankscore[1]) + '/8')
print('Your first best match is ' + str(best[2]))
print('Their score is ' + str(rankscore[2]) + '/8')